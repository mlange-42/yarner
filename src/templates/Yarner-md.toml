[md]

# The sequence that identifies the start and end of a fenced code block
fence_sequence = "```"

# Alternative sequence that identifies the start and end of a fenced code block.
# Allows for normal Markdown fences in code blocks
fence_sequence_alt = "~~~"

# The sequence that separates the language from the name of the code block after the fence
block_name_start = " - "

# Parsed comments are stripped from the code and written to an `<aside></aside>` block after the code when printing.
# If false, the comments are just written back into the code.
comments_as_aside = false
# The sequence to identify a comment which should be omitted from the compiled code,
# and may be rendered as an `<aside>` if `comments_as_aside` is set.
comment_start = "//"

# The sequence to identify the start of a meta variable interpolation.
interpolation_start = "@{"
# The sequence to identify the end of a meta variable interpolation.
interpolation_end = "}"

# The sequence to identify the start of a macro invocation.
macro_start = "==> "
# The sequence to identify the end of a macro invocation.
macro_end = "."

# The sequence to identify the start of a transclusion.
transclusion_start = "@{{"
# The sequence to identify the end of a transclusion.
transclusion_end = "}}"

# The sequence to split variables into name and value.
variable_sep = ":"

# Prefix for file-specific entry points.
file_prefix = "file:"

# Name prefix for code blocks not shown in the docs.
hidden_prefix = "hidden:"

# The language to set if there was no automatically detected language. Optional.
## default_language = "c"

[paths]
# Code output path.
code = "code/"
# Docs output path.
docs = "docs/"
# The input source file(s) as glob pattern(s).
files = ["%%MAIN_FILE%%"]
# File(s) to include in code output (unprocessed), as glob pattern(s).
## code_files = ["**/*.rs"]
# File(s) to include in docs output (unprocessed), as glob pattern(s).
## doc_files = ["**/*.png", "**/*.jpg"]
# Entrypoint block name. Optional. If not supplied, unnamed code blocks are used.
## entrypoint = "Main"
